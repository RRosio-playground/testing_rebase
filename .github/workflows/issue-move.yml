name: Test Transfer Issue and Comment
on:
  issues:
    types:
      - labeled
jobs:
  test-action:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu]
        router:
          - someIssue:actions_dummy
    steps:
      - uses: actions/checkout@v2
      - name: Transfer Issue & Comment
        uses: RRosio-playground/transfer-issue-action@v3.0.0
        id: transfer-issue
        with:
          token: ${{ secrets.MOVEISSUES }}
          apply_label: "MOVED TO ACTIONS_DUMMY:009BBE"
          router: ${{ matrix.router}}
          debug: true
      - name: Echo Output Data
        run: |
          echo "DESTINATION REPO: ${{steps.test_action.outputs.destination_repo}}"
          echo "NEW ISSUE NUMBER: ${{steps.test_action.outputs.new_issue_number}}"
          echo "NEW ISSUE URL: ${{steps.test_action.outputs.new_issue_url}}"
          echo "STUB ISSUE NUMBER: ${{steps.test_action.outputs.stub_issue_number}}"
      - name: Update Transferred Issue
        uses: actions/github-script@v5
        if: steps.transfer-issue.outputs.new_issue_number != ''
        with:
          debug: true
          script: |
            try {
                await github.rest.issues.createComment({
                  issue_number: `${{ steps.transfer-issue.outputs.new_issue_number}}`,
                  owner: context.repo.owner,
                  repo: `${{ steps.transfer-issue.outputs.destinatiom_repo }}`,
                  body: `@${ context.payload.issue.user.login } your issue is over here now!`
                });
            } catch (error) {
              core.setFailed(error.message)
            }
      - name: Close transferred issue
        if: steps.test_action.outputs.new_issue_number != ''
        uses: actions/github-script@v5
        with:
          debug: true
          script: |
            try {
              await github.rest.issues.update({
                issue_number: '${{steps.test_action.outputs.new_issue_number}}',
                owner: context.repo.owner,
                repo: '${{steps.test_action.outputs.destination_repo}}',
                state: 'closed'
              });
            } catch (error) {
              core.setFailed(error.message);
            }